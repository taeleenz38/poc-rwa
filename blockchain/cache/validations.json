{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "bac7da2a53e35458f1021090d8f8a330581e15602a43a80308d2a138dbe70d2b",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/Pricer.sol:Pricer": {
        "src": "contracts\\Pricer.sol:40",
        "version": {
          "withMetadata": "bac88e10d36331143b8c31f1c31f31c6d594194fbb9a736c5cd27a0aa4a4c385",
          "withoutMetadata": "787bb22807ac87cd0c8f72a525465b80a061f8108a91f09e6321e0e0f35659f2",
          "linkedWithoutMetadata": "787bb22807ac87cd0c8f72a525465b80a061f8108a91f09e6321e0e0f35659f2"
        },
        "inherit": [
          "contracts/interfaces/IPricer.sol:IPricer",
          "contracts/external/openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "contracts/external/openzeppelin/contracts/utils/ERC165.sol:ERC165",
          "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165",
          "contracts/external/openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "getLatestPrice()",
          "getPrice(uint256)",
          "addPrice(uint256,uint256)",
          "updatePrice(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pricer",
            "src": "contracts\\Pricer.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)",
              "contract": "AccessControl",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)",
              "contract": "AccessControlEnumerable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControlEnumerable.sol:19"
            },
            {
              "label": "prices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(PriceInfo)732_storage)",
              "contract": "Pricer",
              "src": "contracts\\Pricer.sol:46"
            },
            {
              "label": "priceIds",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Pricer",
              "src": "contracts\\Pricer.sol:53"
            },
            {
              "label": "currentPriceId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Pricer",
              "src": "contracts\\Pricer.sol:60"
            },
            {
              "label": "latestPriceId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Pricer",
              "src": "contracts\\Pricer.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PriceInfo)732_storage)": {
              "label": "mapping(uint256 => struct Pricer.PriceInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10888_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)10587_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PriceInfo)732_storage": {
              "label": "struct Pricer.PriceInfo",
              "members": [
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)7671_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)10587_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/PricerWithOracle.sol:PricerWithOracle": {
        "src": "contracts\\PricerWithOracle.sol:45",
        "version": {
          "withMetadata": "246ec9e015fef6665324bf66f7df1ac801f965a991e4401a30dcc2021dcf4e75",
          "withoutMetadata": "201cf103de59b51ac5dd4361b85974de4219447b1143bff73e825110fd84aad4",
          "linkedWithoutMetadata": "201cf103de59b51ac5dd4361b85974de4219447b1143bff73e825110fd84aad4"
        },
        "inherit": [
          "contracts/interfaces/IPricerWithOracle.sol:IPricerWithOracle",
          "contracts/Pricer.sol:Pricer",
          "contracts/interfaces/IPricer.sol:IPricer",
          "contracts/external/openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "contracts/external/openzeppelin/contracts/utils/ERC165.sol:ERC165",
          "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165",
          "contracts/external/openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "addPrice(uint256,uint256)",
          "addLatestOraclePrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PricerWithOracle",
            "src": "contracts\\PricerWithOracle.sol:52"
          },
          {
            "kind": "state-variable-immutable",
            "name": "rwaOracle",
            "src": "contracts\\PricerWithOracle.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)",
              "contract": "AccessControl",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)",
              "contract": "AccessControlEnumerable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControlEnumerable.sol:19"
            },
            {
              "label": "prices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(PriceInfo)732_storage)",
              "contract": "Pricer",
              "src": "contracts\\Pricer.sol:46"
            },
            {
              "label": "priceIds",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Pricer",
              "src": "contracts\\Pricer.sol:53"
            },
            {
              "label": "currentPriceId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Pricer",
              "src": "contracts\\Pricer.sol:60"
            },
            {
              "label": "latestPriceId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Pricer",
              "src": "contracts\\Pricer.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PriceInfo)732_storage)": {
              "label": "mapping(uint256 => struct Pricer.PriceInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10888_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)10587_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PriceInfo)732_storage": {
              "label": "struct Pricer.PriceInfo",
              "members": [
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)7671_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)10587_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/Proxy.sol:TokenProxy": {
        "src": "contracts\\Proxy.sol:27",
        "version": {
          "withMetadata": "d1a3d7bb8a176931bb5fc98a44634286f40c49d0d17d1451fbaa02102704b3e7",
          "withoutMetadata": "d1a3d7bb8a176931bb5fc98a44634286f40c49d0d17d1451fbaa02102704b3e7",
          "linkedWithoutMetadata": "d1a3d7bb8a176931bb5fc98a44634286f40c49d0d17d1451fbaa02102704b3e7"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts/proxy/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
          "contracts/external/openzeppelin/contracts/proxy/ERC1967Proxy.sol:ERC1967Proxy",
          "contracts/external/openzeppelin/contracts/proxy/ERC1967Upgrade.sol:ERC1967Upgrade",
          "contracts/external/openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenProxy",
            "src": "contracts\\Proxy.sol:27"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/RWAHub.sol:RWAHub": {
        "src": "contracts\\RWAHub.sol:44",
        "inherit": [
          "contracts/external/openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "contracts/external/openzeppelin/contracts/utils/ERC165.sol:ERC165",
          "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165",
          "contracts/external/openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/external/openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/interfaces/IRWAHub.sol:IRWAHub"
        ],
        "libraries": [
          "contracts/external/openzeppelin/contracts/token/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "requestSubscription(uint256)",
          "claimMint(bytes32[])",
          "requestRedemption(uint256)",
          "claimRedemption(bytes32[])",
          "addProof(bytes32,address,uint256,uint256,uint256)",
          "setPriceIdForDeposits(bytes32[],uint256[])",
          "setPriceIdForRedemptions(bytes32[],uint256[])",
          "overwriteDepositor(bytes32,address,uint256,uint256)",
          "overwriteRedeemer(bytes32,address,uint256,uint256)",
          "setMinimumRedemptionAmount(uint256)",
          "setMinimumDepositAmount(uint256)",
          "setMintFee(uint256)",
          "setRedemptionFee(uint256)",
          "setPricer(address)",
          "setFeeRecipient(address)",
          "setAssetSender(address)",
          "pauseSubscription()",
          "pauseRedemption()",
          "unpauseSubscription()",
          "unpauseRedemption()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RWAHub",
            "src": "contracts\\RWAHub.sol:112"
          },
          {
            "kind": "state-variable-immutable",
            "name": "rwa",
            "src": "contracts\\RWAHub.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mintFee",
            "src": "contracts\\RWAHub.sol:74"
          },
          {
            "kind": "state-variable-assignment",
            "name": "redemptionFee",
            "src": "contracts\\RWAHub.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "collateral",
            "src": "contracts\\RWAHub.sol:81"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimalsMultiplier",
            "src": "contracts\\RWAHub.sol:83"
          },
          {
            "kind": "state-variable-assignment",
            "name": "subscriptionRequestCounter",
            "src": "contracts\\RWAHub.sol:85"
          },
          {
            "kind": "state-variable-assignment",
            "name": "redemptionRequestCounter",
            "src": "contracts\\RWAHub.sol:88"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\external\\openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)",
              "contract": "AccessControl",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)",
              "contract": "AccessControlEnumerable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControlEnumerable.sol:19"
            },
            {
              "label": "pricer",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPricerReader)12291",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:48"
            },
            {
              "label": "assetSender",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:55"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:58"
            },
            {
              "label": "depositIdToDepositor",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_struct(Depositor)12310_storage)",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:59"
            },
            {
              "label": "redemptionIdToRedeemer",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Redeemer)12317_storage)",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:64"
            },
            {
              "label": "minimumDepositAmount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:69"
            },
            {
              "label": "minimumRedemptionAmount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:72"
            },
            {
              "label": "mintFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:74"
            },
            {
              "label": "redemptionFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:77"
            },
            {
              "label": "subscriptionRequestCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:85"
            },
            {
              "label": "redemptionRequestCounter",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:88"
            },
            {
              "label": "redemptionPaused",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:96"
            },
            {
              "label": "subscriptionPaused",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IPricerReader)12291": {
              "label": "contract IPricerReader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Depositor)12310_storage)": {
              "label": "mapping(bytes32 => struct IRWAHub.Depositor)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Redeemer)12317_storage)": {
              "label": "mapping(bytes32 => struct IRWAHub.Redeemer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10888_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)10587_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Depositor)12310_storage": {
              "label": "struct IRWAHub.Depositor",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountDepositedMinusFees",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "priceId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Redeemer)12317_storage": {
              "label": "struct IRWAHub.Redeemer",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountRwaTokenBurned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "priceId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(RoleData)7671_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)10587_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/RWAHubOffChainRedemptions.sol:RWAHubOffChainRedemptions": {
        "src": "contracts\\RWAHubOffChainRedemptions.sol:47",
        "inherit": [
          "contracts/interfaces/IRWAHubOffChainRedemptions.sol:IRWAHubOffChainRedemptions",
          "contracts/RWAHub.sol:RWAHub",
          "contracts/external/openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "contracts/external/openzeppelin/contracts/utils/ERC165.sol:ERC165",
          "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165",
          "contracts/external/openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/external/openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/interfaces/IRWAHub.sol:IRWAHub"
        ],
        "libraries": [],
        "methods": [
          "requestRedemptionServicedOffchain(uint256,bytes32)",
          "pauseOffChainRedemption()",
          "unpauseOffChainRedemption()",
          "setOffChainRedemptionMinimum(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RWAHubOffChainRedemptions",
            "src": "contracts\\RWAHubOffChainRedemptions.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\external\\openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)",
              "contract": "AccessControl",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)",
              "contract": "AccessControlEnumerable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControlEnumerable.sol:19"
            },
            {
              "label": "pricer",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPricerReader)12291",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:48"
            },
            {
              "label": "assetSender",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:55"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:58"
            },
            {
              "label": "depositIdToDepositor",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_struct(Depositor)12310_storage)",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:59"
            },
            {
              "label": "redemptionIdToRedeemer",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Redeemer)12317_storage)",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:64"
            },
            {
              "label": "minimumDepositAmount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:69"
            },
            {
              "label": "minimumRedemptionAmount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:72"
            },
            {
              "label": "mintFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:74"
            },
            {
              "label": "redemptionFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:77"
            },
            {
              "label": "subscriptionRequestCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:85"
            },
            {
              "label": "redemptionRequestCounter",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:88"
            },
            {
              "label": "redemptionPaused",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:96"
            },
            {
              "label": "subscriptionPaused",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:97"
            },
            {
              "label": "offChainRedemptionPaused",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "RWAHubOffChainRedemptions",
              "src": "contracts\\RWAHubOffChainRedemptions.sol:53"
            },
            {
              "label": "minimumOffChainRedemptionAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RWAHubOffChainRedemptions",
              "src": "contracts\\RWAHubOffChainRedemptions.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IPricerReader)12291": {
              "label": "contract IPricerReader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Depositor)12310_storage)": {
              "label": "mapping(bytes32 => struct IRWAHub.Depositor)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Redeemer)12317_storage)": {
              "label": "mapping(bytes32 => struct IRWAHub.Redeemer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10888_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)10587_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Depositor)12310_storage": {
              "label": "struct IRWAHub.Depositor",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountDepositedMinusFees",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "priceId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Redeemer)12317_storage": {
              "label": "struct IRWAHub.Redeemer",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountRwaTokenBurned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "priceId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(RoleData)7671_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)10587_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/Token.sol:A$DC": {
        "src": "contracts\\Token.sol:8",
        "version": {
          "withMetadata": "e816730f2eadee92712795bcf7aba83d1b916a35c627b8bd874a64e3e443a13a",
          "withoutMetadata": "9e5a54b0314781bfa14b492f9c413e6bb0706e4563b25a1264560a44323ae204",
          "linkedWithoutMetadata": "9e5a54b0314781bfa14b492f9c413e6bb0706e4563b25a1264560a44323ae204"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "A$DC",
            "src": "contracts\\Token.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/chainalysis/ISanctionsList.sol:ISanctionsList": {
        "src": "contracts\\external\\chainalysis\\ISanctionsList.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isSanctioned(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/chainlink/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "contracts\\external\\chainlink\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:14",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol:IAccessControlEnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/external/openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:65"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:296"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)7126_storage)",
              "contract": "AccessControlEnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlEnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)7126_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)7126_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6825_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)2922_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6825_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:50",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/external/openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:65"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:296"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)2922_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol:IAccessControlEnumerableUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\IAccessControlEnumerableUpgradeable.sol:11",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "contracts/external/openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20BurnableUpgradeable.sol:15",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:48"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:49"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:438"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20BurnableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20BurnableUpgradeable.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20PausableUpgradeable.sol:17",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:48"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:49"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:438"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20PausableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20PresetMinterPauserUpgradeable.sol:29",
        "version": {
          "withMetadata": "8e6230f4981e77e0a7a537866ad444536c3e84f2bcee4c19b08cdff32fc51bc3",
          "withoutMetadata": "151fa0722b742300002d9596b76355d71861c1a573fff4eabba5d98035f4f960",
          "linkedWithoutMetadata": "151fa0722b742300002d9596b76355d71861c1a573fff4eabba5d98035f4f960"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol:IAccessControlEnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string)",
          "mint(address,uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:65"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:296"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)7126_storage)",
              "contract": "AccessControlEnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlEnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:106"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "203",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "204",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:48"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "205",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:49"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "206",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:438"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20BurnableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20BurnableUpgradeable.sol:54"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "301",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "302",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "351",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20PausableUpgradeable.sol:50"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "401",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PresetMinterPauserUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20PresetMinterPauserUpgradeable.sol:136"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)7126_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)7126_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6825_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)2922_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6825_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "869dac9659b09506c9aa91f231cd30b17500bce3e2ba37275601359b05bcb770",
          "withoutMetadata": "40eaa5e4d0ae1d70ed6cf327e1925a524ca5827822bcc15cbc5bc1490198d422",
          "linkedWithoutMetadata": "40eaa5e4d0ae1d70ed6cf327e1925a524ca5827822bcc15cbc5bc1490198d422"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:48"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:49"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:438"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721BurnableUpgradeable.sol:ERC721BurnableUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:546"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721BurnableUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:15",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:546"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:25"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:28"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:31"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)46_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:206"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721PausableUpgradeable.sol:ERC721PausableUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:546"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "151",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721PausableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721PresetMinterPauserAutoIdUpgradeable.sol:ERC721PresetMinterPauserAutoIdUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721PresetMinterPauserAutoIdUpgradeable.sol:32",
        "version": {
          "withMetadata": "fd8a396e3e43fc84d4993e9d30b3ef2883184a38b09debfc8d73cb0feb693d27",
          "withoutMetadata": "755323b4c4b37a5c2f35cebbb2dc09615658ad4f1d17a550217c70d2df563333",
          "linkedWithoutMetadata": "755323b4c4b37a5c2f35cebbb2dc09615658ad4f1d17a550217c70d2df563333"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721PausableUpgradeable.sol:ERC721PausableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721BurnableUpgradeable.sol:ERC721BurnableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol:IAccessControlEnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/external/openzeppelin/contracts-upgradeable/utils/CounterUpgradeable.sol:CountersUpgradeable"
        ],
        "methods": [
          "initialize(string,string,string)",
          "mint(address)",
          "pause()",
          "unpause()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:65"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:296"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)7126_storage)",
              "contract": "AccessControlEnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlEnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:106"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "201",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "202",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:546"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:25"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "252",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:28"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:31"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "255",
              "type": "t_array(t_uint256)46_storage",
              "contract": "ERC721EnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721EnumerableUpgradeable.sol:206"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "301",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721BurnableUpgradeable.sol:44"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "351",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "352",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "401",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721PausableUpgradeable.sol:50"
            },
            {
              "label": "_tokenIdTracker",
              "offset": 0,
              "slot": "451",
              "type": "t_struct(Counter)6702_storage",
              "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
            },
            {
              "label": "_baseTokenURI",
              "offset": 0,
              "slot": "452",
              "type": "t_string_storage",
              "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721PresetMinterPauserAutoIdUpgradeable.sol:55"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "453",
              "type": "t_array(t_uint256)48_storage",
              "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721PresetMinterPauserAutoIdUpgradeable.sol:186"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)7126_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)7126_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6825_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Counter)6702_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)2922_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6825_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "6daccd87509a70e701bcfe4d4403746f0fed5ca60af86dfdef791bedf55743e7",
          "withoutMetadata": "50105f8f25646e01d1732b476b2c90ed3f5cc824e43b9cfc303f1f1d9fd36bc3",
          "linkedWithoutMetadata": "50105f8f25646e01d1732b476b2c90ed3f5cc824e43b9cfc303f1f1d9fd36bc3"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/external/openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:546"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\IERC721EnumerableUpgradeable.sol:12",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC721\\IERC721Upgradeable.sol:11",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "6e122d5c30bc2b304448430747cf54fc62e2572ac1cb95dacfe1d45ce936a3ef",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/utils/CounterUpgradeable.sol:CountersUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\CounterUpgradeable.sol:14",
        "version": {
          "withMetadata": "bdccfb870b061ae7691b324ceeef1e3ce8ab56dd7a2af3885f37f5992c249798",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:23",
        "inherit": [
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\EnumerableSetUpgradeable.sol:38",
        "version": {
          "withMetadata": "9d13d4ae1bc4e1aff799b5793d2196ea0fcb09718ee577748546a93b0001e5ef",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "c1dc004813006c37c16e16b5f01befdac4e359f764e6148f40acfd60ac20a0b8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControl.sol:49",
        "inherit": [
          "contracts/external/openzeppelin/contracts/utils/ERC165.sol:ERC165",
          "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165",
          "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/external/openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)",
              "contract": "AccessControl",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)7671_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable": {
        "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControlEnumerable.sol:13",
        "inherit": [
          "contracts/external/openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "contracts/external/openzeppelin/contracts/utils/ERC165.sol:ERC165",
          "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165",
          "contracts/external/openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/external/openzeppelin/contracts/utils/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)",
              "contract": "AccessControl",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)",
              "contract": "AccessControlEnumerable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControlEnumerable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10888_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)10587_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)7671_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)10587_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "contracts\\external\\openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable": {
        "src": "contracts\\external\\openzeppelin\\contracts\\access\\IAccessControlEnumerable.sol:11",
        "inherit": [
          "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "contracts\\external\\openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\external\\openzeppelin\\contracts\\access\\Ownable.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step": {
        "src": "contracts\\external\\openzeppelin\\contracts\\access\\Ownable2Step.sol:19",
        "inherit": [
          "contracts/external/openzeppelin/contracts/access/Ownable.sol:Ownable",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\Ownable2Step.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/proxy/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "contracts\\external\\openzeppelin\\contracts\\proxy\\ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "cde4ba6d291af93296b67286f1668594314308cfb7b2df546afe77602e9244ed",
          "withoutMetadata": "cde4ba6d291af93296b67286f1668594314308cfb7b2df546afe77602e9244ed",
          "linkedWithoutMetadata": "cde4ba6d291af93296b67286f1668594314308cfb7b2df546afe77602e9244ed"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts/proxy/ERC1967Upgrade.sol:ERC1967Upgrade",
          "contracts/external/openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts\\external\\openzeppelin\\contracts\\proxy\\ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Address.sol:219"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/proxy/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "contracts\\external\\openzeppelin\\contracts\\proxy\\ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "contracts/external/openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "contracts/external/openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Address.sol:219"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Address.sol:219"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Address.sol:219"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/proxy/IBeacon.sol:IBeacon": {
        "src": "contracts\\external\\openzeppelin\\contracts\\proxy\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "contracts\\external\\openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/proxy/ProxyAdmin.sol:ProxyAdmin": {
        "src": "contracts\\external\\openzeppelin\\contracts\\proxy\\ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "ca733b3043bd428dbd867959b351a3b2a90e257899111e880528ef234c7cc03d",
          "withoutMetadata": "a3dbb837c4c4ed518a1189e358be0496403d4c696ec3a1a662adb81ffbce0efd",
          "linkedWithoutMetadata": "a3dbb837c4c4ed518a1189e358be0496403d4c696ec3a1a662adb81ffbce0efd"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts/access/Ownable.sol:Ownable",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Address.sol:219"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/proxy/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "contracts\\external\\openzeppelin\\contracts\\proxy\\TransparentUpgradeableProxy.sol:29",
        "version": {
          "withMetadata": "c06c06e848533ec40fbee1590574456f0865634dbee7cf4239d7b4ca2398407a",
          "withoutMetadata": "c06c06e848533ec40fbee1590574456f0865634dbee7cf4239d7b4ca2398407a",
          "linkedWithoutMetadata": "c06c06e848533ec40fbee1590574456f0865634dbee7cf4239d7b4ca2398407a"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts/proxy/ERC1967Proxy.sol:ERC1967Proxy",
          "contracts/external/openzeppelin/contracts/proxy/ERC1967Upgrade.sol:ERC1967Upgrade",
          "contracts/external/openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts\\external\\openzeppelin\\contracts\\proxy\\TransparentUpgradeableProxy.sol:34"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Address.sol:219"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Address.sol:219"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/proxy/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "contracts\\external\\openzeppelin\\contracts\\proxy\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "contracts\\external\\openzeppelin\\contracts\\security\\Pausable.sol:17",
        "inherit": [
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts\\external\\openzeppelin\\contracts\\security\\Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts\\external\\openzeppelin\\contracts\\security\\Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts\\external\\openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\external\\openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\external\\openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/token/ERC20.sol:ERC20": {
        "src": "contracts\\external\\openzeppelin\\contracts\\token\\ERC20.sol:35",
        "version": {
          "withMetadata": "4700045c1d2d6fd0f151814050fcd9bb7b612684e5421440bcc27eae882f222f",
          "withoutMetadata": "07351621275091a4ae82a80a8f272a70d2c72e4a6e37d6c879e5291daafe34d5",
          "linkedWithoutMetadata": "07351621275091a4ae82a80a8f272a70d2c72e4a6e37d6c879e5291daafe34d5"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts/token/IERC20Metadata.sol:IERC20Metadata",
          "contracts/external/openzeppelin/contracts/token/IERC20.sol:IERC20",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\external\\openzeppelin\\contracts\\token\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\external\\openzeppelin\\contracts\\token\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\external\\openzeppelin\\contracts\\token\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\external\\openzeppelin\\contracts\\token\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\external\\openzeppelin\\contracts\\token\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\external\\openzeppelin\\contracts\\token\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/token/IERC20.sol:IERC20": {
        "src": "contracts\\external\\openzeppelin\\contracts\\token\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/token/IERC20Metadata.sol:IERC20Metadata": {
        "src": "contracts\\external\\openzeppelin\\contracts\\token\\IERC20Metadata.sol:13",
        "inherit": [
          "contracts/external/openzeppelin/contracts/token/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/token/SafeERC20.sol:SafeERC20": {
        "src": "contracts\\external\\openzeppelin\\contracts\\token\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "0b8859b157058a9c60c3450617ee0c60a82e02df98506319dcc7a4897f886f6f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/external/openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8045465c90b86e67f066fe50bc1b53ec58e82c6a6c1348881cf8ffa2eb9f07ba",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Address.sol:219"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Address.sol:219"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "53784d26619d115040def86e74b66c2f1c4a099232acc6cb47c9912e95b7684a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/utils/ERC165.sol:ERC165": {
        "src": "contracts\\external\\openzeppelin\\contracts\\utils\\ERC165.sol:22",
        "inherit": [
          "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/utils/EnumerableSet.sol:EnumerableSet": {
        "src": "contracts\\external\\openzeppelin\\contracts\\utils\\EnumerableSet.sol:30",
        "version": {
          "withMetadata": "5c4c8b2cc0bf588d99ea7be28982f8c3d94169964b0c93d442209ee34477ae73",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165": {
        "src": "contracts\\external\\openzeppelin\\contracts\\utils\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "contracts\\external\\openzeppelin\\contracts\\utils\\StorageSlot.sol:32",
        "version": {
          "withMetadata": "5af6a4e899098a9f42583ed697edd41597044035055da553d8c88ce6be495727",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "contracts\\external\\openzeppelin\\contracts\\utils\\Strings.sol:9",
        "version": {
          "withMetadata": "2e66ece3cde3e75b6a9ec0d30fea5197fd23edc674f049af6f3b0f3da076563e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "contracts\\external\\openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "4348e207d862d37dc246ba6d7b894e2fa460b76f3d85ab9c813c747da0354bd9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/external/openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/external/openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "contracts\\external\\openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:27",
        "inherit": [],
        "libraries": [
          "contracts/external/openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:53"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_DOMAIN_SEPARATOR",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:31"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_CHAIN_ID",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_THIS",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:33"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_HASHED_NAME",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:35"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_HASHED_VERSION",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:36"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_TYPE_HASH",
            "src": "contracts\\external\\openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:37"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IAllowlist.sol:IAllowlist": {
        "src": "contracts\\interfaces\\IAllowlist.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addTerm(string)",
          "setCurrentTermIndex(uint256)",
          "setValidTermIndexes(uint256[])",
          "isAllowed(address)",
          "getCurrentTerm()",
          "getValidTermIndexes()",
          "addAccountToAllowlist(uint256,address,uint8,bytes32,bytes32)",
          "addSelfToAllowlist(uint256)",
          "setAccountStatus(address,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IAllowlistClient.sol:IAllowlistClient": {
        "src": "contracts\\interfaces\\IAllowlistClient.sol:41",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowlist()",
          "setAllowlist(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IBlocklist.sol:IBlocklist": {
        "src": "contracts\\interfaces\\IBlocklist.sol:37",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addToBlocklist(address[])",
          "removeFromBlocklist(address[])",
          "isBlocked(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IBlocklistClient.sol:IBlocklistClient": {
        "src": "contracts\\interfaces\\IBlocklistClient.sol:43",
        "inherit": [],
        "libraries": [],
        "methods": [
          "blocklist()",
          "setBlocklist(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IMulticall.sol:IMulticall": {
        "src": "contracts\\interfaces\\IMulticall.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multiexcall(struct IMulticall.ExCallData[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IOmmf.sol:IOMMF": {
        "src": "contracts\\interfaces\\IOmmf.sol:28",
        "inherit": [
          "contracts/external/openzeppelin/contracts/token/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "getPooledCashByShares(uint256)",
          "getSharesByPooledCash(uint256)",
          "submit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IPricer.sol:IPricer": {
        "src": "contracts\\interfaces\\IPricer.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getLatestPrice()",
          "getPrice(uint256)",
          "addPrice(uint256,uint256)",
          "updatePrice(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IPricerReader.sol:IPricerReader": {
        "src": "contracts\\interfaces\\IPricerReader.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getLatestPrice()",
          "getPrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IPricerWithOracle.sol:IPricerWithOracle": {
        "src": "contracts\\interfaces\\IPricerWithOracle.sol:26",
        "inherit": [
          "contracts/interfaces/IPricer.sol:IPricer"
        ],
        "libraries": [],
        "methods": [
          "addLatestOraclePrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IRWAHub.sol:IRWAHub": {
        "src": "contracts\\interfaces\\IRWAHub.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestSubscription(uint256)",
          "claimMint(bytes32[])",
          "requestRedemption(uint256)",
          "claimRedemption(bytes32[])",
          "addProof(bytes32,address,uint256,uint256,uint256)",
          "setPriceIdForDeposits(bytes32[],uint256[])",
          "setPriceIdForRedemptions(bytes32[],uint256[])",
          "setPricer(address)",
          "overwriteDepositor(bytes32,address,uint256,uint256)",
          "overwriteRedeemer(bytes32,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IRWAHubInstantMints.sol:IRWAHubInstantMints": {
        "src": "contracts\\interfaces\\IRWAHubInstantMints.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "instantMint(uint256)",
          "instantRedemption(uint256)",
          "setInstantMintFee(uint256)",
          "setInstantRedemptionFee(uint256)",
          "setInstantMintPriceId(uint256)",
          "setInstantRedemptionPriceId(uint256)",
          "pauseInstantMint()",
          "unpauseInstantMint()",
          "pauseInstantRedemption()",
          "unpauseInstantRedemption()",
          "setInstantMintLimit(uint256)",
          "setInstantRedemptionLimit(uint256)",
          "setInstantMintLimitDuration(uint256)",
          "setInstantRedemptionLimitDuration(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IRWAHubNonStableInstantMint.sol:IRWAHubNonStableInstantMint": {
        "src": "contracts\\interfaces\\IRWAHubNonStableInstantMint.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IRWAHubOffChainRedemptions.sol:IRWAHubOffChainRedemptions": {
        "src": "contracts\\interfaces\\IRWAHubOffChainRedemptions.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestRedemptionServicedOffchain(uint256,bytes32)",
          "pauseOffChainRedemption()",
          "unpauseOffChainRedemption()",
          "setOffChainRedemptionMinimum(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IRWALike.sol:IRWALike": {
        "src": "contracts\\interfaces\\IRWALike.sol:29",
        "inherit": [
          "contracts/external/openzeppelin/contracts/token/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IUSDYManager.sol:IUSDYManager": {
        "src": "contracts\\interfaces\\IUSDYManager.sol:37",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setClaimableTimestamp(uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/interfaces/IWommf.sol:IWOMMF": {
        "src": "contracts\\interfaces\\IWommf.sol:30",
        "inherit": [
          "contracts/external/openzeppelin/contracts/token/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "wrap(uint256)",
          "unwrap(uint256)",
          "getwOMMFByOMMF(uint256)",
          "getOMMFbywOMMF(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/rwaOracles/IRWAOracle.sol:IRWAOracle": {
        "src": "contracts\\rwaOracles\\IRWAOracle.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPriceData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/rwaOracles/IRWAOracleExternalComparisonCheck.sol:IRWAOracleExternalComparisonCheck": {
        "src": "contracts\\rwaOracles\\IRWAOracleExternalComparisonCheck.sol:35",
        "inherit": [
          "contracts/rwaOracles/IRWAOracle.sol:IRWAOracle"
        ],
        "libraries": [],
        "methods": [
          "setPrice(int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/rwaOracles/IRWAOracleSetter.sol:IRWAOracleSetter": {
        "src": "contracts\\rwaOracles\\IRWAOracleSetter.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPriceData()",
          "setPrice(int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/rwaOracles/RWAOracleExternalComparisonCheck.sol:RWAOracleExternalComparisonCheck": {
        "src": "contracts\\rwaOracles\\RWAOracleExternalComparisonCheck.sol:42",
        "version": {
          "withMetadata": "8db84223836899135a99c061aab15f3b05693bfa6ea2312837b7149bdb415841",
          "withoutMetadata": "0c795143d9e55a127a85aedc0bfac78e646461873479d91406bb5a1491ef3f61",
          "linkedWithoutMetadata": "0c795143d9e55a127a85aedc0bfac78e646461873479d91406bb5a1491ef3f61"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "contracts/external/openzeppelin/contracts/utils/ERC165.sol:ERC165",
          "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165",
          "contracts/external/openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/rwaOracles/IRWAOracleExternalComparisonCheck.sol:IRWAOracleExternalComparisonCheck",
          "contracts/rwaOracles/IRWAOracle.sol:IRWAOracle"
        ],
        "libraries": [],
        "methods": [
          "(int256,address,string,address,address)",
          "getPriceData()",
          "setPrice(int256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RWAOracleExternalComparisonCheck",
            "src": "contracts\\rwaOracles\\RWAOracleExternalComparisonCheck.sol:103"
          },
          {
            "kind": "state-variable-immutable",
            "name": "chainlinkOracle",
            "src": "contracts\\rwaOracles\\RWAOracleExternalComparisonCheck.sol:60"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)",
              "contract": "AccessControl",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)",
              "contract": "AccessControlEnumerable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControlEnumerable.sol:19"
            },
            {
              "label": "rwaPrice",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "RWAOracleExternalComparisonCheck",
              "src": "contracts\\rwaOracles\\RWAOracleExternalComparisonCheck.sol:52"
            },
            {
              "label": "priceTimestamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "RWAOracleExternalComparisonCheck",
              "src": "contracts\\rwaOracles\\RWAOracleExternalComparisonCheck.sol:54"
            },
            {
              "label": "lastSetRound",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(ChainlinkRoundData)13075_storage",
              "contract": "RWAOracleExternalComparisonCheck",
              "src": "contracts\\rwaOracles\\RWAOracleExternalComparisonCheck.sol:57"
            },
            {
              "label": "description",
              "offset": 0,
              "slot": "9",
              "type": "t_string_storage",
              "contract": "RWAOracleExternalComparisonCheck",
              "src": "contracts\\rwaOracles\\RWAOracleExternalComparisonCheck.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10888_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)10587_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ChainlinkRoundData)13075_storage": {
              "label": "struct RWAOracleExternalComparisonCheck.ChainlinkRoundData",
              "members": [
                {
                  "label": "roundId",
                  "type": "t_uint80",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "answer",
                  "type": "t_int256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "answeredInRound",
                  "type": "t_uint80",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(RoleData)7671_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)10587_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/rwaOracles/RWAOracleRateCheck.sol:RWAOracleRateCheck": {
        "src": "contracts\\rwaOracles\\RWAOracleRateCheck.sol:36",
        "version": {
          "withMetadata": "a9eab904fc4ee727f3c5eebad03b0ea5806b2ee019411054c3008cc281a54d5f",
          "withoutMetadata": "b4a57f6c867bbb497c817514f6f1fa31544c11e2ec125550f3a9dbc0a6ff12f7",
          "linkedWithoutMetadata": "b4a57f6c867bbb497c817514f6f1fa31544c11e2ec125550f3a9dbc0a6ff12f7"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "contracts/external/openzeppelin/contracts/utils/ERC165.sol:ERC165",
          "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165",
          "contracts/external/openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/rwaOracles/IRWAOracle.sol:IRWAOracle"
        ],
        "libraries": [],
        "methods": [
          "(address,address,int256)",
          "getPriceData()",
          "setPrice(int256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RWAOracleRateCheck",
            "src": "contracts\\rwaOracles\\RWAOracleRateCheck.sol:71"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)",
              "contract": "AccessControl",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)",
              "contract": "AccessControlEnumerable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControlEnumerable.sol:19"
            },
            {
              "label": "rwaPrice",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "RWAOracleRateCheck",
              "src": "contracts\\rwaOracles\\RWAOracleRateCheck.sol:41"
            },
            {
              "label": "priceTimestamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "RWAOracleRateCheck",
              "src": "contracts\\rwaOracles\\RWAOracleRateCheck.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10888_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)10587_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)7671_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)10587_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/sanctions/ISanctionsListClient.sol:ISanctionsListClient": {
        "src": "contracts\\sanctions\\ISanctionsListClient.sol:41",
        "inherit": [],
        "libraries": [],
        "methods": [
          "sanctionsList()",
          "setSanctionsList(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/sanctions/SanctionsListClient.sol:SanctionsListClient": {
        "src": "contracts\\sanctions\\SanctionsListClient.sol:47",
        "inherit": [
          "contracts/sanctions/ISanctionsListClient.sol:ISanctionsListClient"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SanctionsListClient",
            "src": "contracts\\sanctions\\SanctionsListClient.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sanctionsList",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISanctionsList)2696",
              "contract": "SanctionsListClient",
              "src": "contracts\\sanctions\\SanctionsListClient.sol:50"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "SanctionsListClient",
              "src": "contracts\\sanctions\\SanctionsListClient.sol:70"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_contract(ISanctionsList)2696": {
              "label": "contract ISanctionsList",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/sanctions/SanctionsListClientUpgradeable.sol:SanctionsListClientUpgradeable": {
        "src": "contracts\\sanctions\\SanctionsListClientUpgradeable.sol:47",
        "inherit": [
          "contracts/sanctions/ISanctionsListClient.sol:ISanctionsListClient",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "sanctionsList",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISanctionsList)2696",
              "contract": "SanctionsListClientUpgradeable",
              "src": "contracts\\sanctions\\SanctionsListClientUpgradeable.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "SanctionsListClientUpgradeable",
              "src": "contracts\\sanctions\\SanctionsListClientUpgradeable.sol:89"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISanctionsList)2696": {
              "label": "contract ISanctionsList",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/USDY.sol:USDY": {
        "src": "contracts\\usdy\\USDY.sol:45",
        "version": {
          "withMetadata": "194cf87b9119522c94de491ceee1166d4844d319931279f9ddf6406f88f0a157",
          "withoutMetadata": "61f7046a362c7e27fca9b6a422172ac2ec8531d4666f9d7a6518750624da1818",
          "linkedWithoutMetadata": "61f7046a362c7e27fca9b6a422172ac2ec8531d4666f9d7a6518750624da1818"
        },
        "inherit": [
          "contracts/sanctions/SanctionsListClientUpgradeable.sol:SanctionsListClientUpgradeable",
          "contracts/sanctions/ISanctionsListClient.sol:ISanctionsListClient",
          "contracts/usdy/allowlist/AllowlistClientUpgradeable.sol:AllowlistClientUpgradeable",
          "contracts/interfaces/IAllowlistClient.sol:IAllowlistClient",
          "contracts/usdy/blocklist/BlocklistClientUpgradeable.sol:BlocklistClientUpgradeable",
          "contracts/interfaces/IBlocklistClient.sol:IBlocklistClient",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol:IAccessControlEnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(string,string,address,address,address)",
          "setBlocklist(address)",
          "setAllowlist(address)",
          "setSanctionsList(address)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:65"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:296"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)7126_storage)",
              "contract": "AccessControlEnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlEnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:106"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "203",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "204",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:48"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "205",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:49"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "206",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:438"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20BurnableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20BurnableUpgradeable.sol:54"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "301",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "302",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "351",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20PausableUpgradeable.sol:50"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "401",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PresetMinterPauserUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20PresetMinterPauserUpgradeable.sol:136"
            },
            {
              "label": "blocklist",
              "offset": 0,
              "slot": "451",
              "type": "t_contract(IBlocklist)12161",
              "contract": "BlocklistClientUpgradeable",
              "src": "contracts\\usdy\\blocklist\\BlocklistClientUpgradeable.sol:53"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "452",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlocklistClientUpgradeable",
              "src": "contracts\\usdy\\blocklist\\BlocklistClientUpgradeable.sol:89"
            },
            {
              "label": "allowlist",
              "offset": 0,
              "slot": "502",
              "type": "t_contract(IAllowlist)12099",
              "contract": "AllowlistClientUpgradeable",
              "src": "contracts\\usdy\\allowlist\\AllowlistClientUpgradeable.sol:53"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "503",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AllowlistClientUpgradeable",
              "src": "contracts\\usdy\\allowlist\\AllowlistClientUpgradeable.sol:89"
            },
            {
              "label": "sanctionsList",
              "offset": 0,
              "slot": "553",
              "type": "t_contract(ISanctionsList)2696",
              "contract": "SanctionsListClientUpgradeable",
              "src": "contracts\\sanctions\\SanctionsListClientUpgradeable.sol:52"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "554",
              "type": "t_array(t_uint256)50_storage",
              "contract": "SanctionsListClientUpgradeable",
              "src": "contracts\\sanctions\\SanctionsListClientUpgradeable.sol:89"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IAllowlist)12099": {
              "label": "contract IAllowlist",
              "numberOfBytes": "20"
            },
            "t_contract(IBlocklist)12161": {
              "label": "contract IBlocklist",
              "numberOfBytes": "20"
            },
            "t_contract(ISanctionsList)2696": {
              "label": "contract ISanctionsList",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)7126_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)7126_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6825_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)2922_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6825_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/USDYFactory.sol:USDYFactory": {
        "src": "contracts\\usdy\\USDYFactory.sol:64",
        "version": {
          "withMetadata": "7a8ea6cb9d35a70e5009a9c195f3d5eefe6ce9634bc63c0b694839bd465f02cc",
          "withoutMetadata": "f16a81475fd38fc5e1d13911de695d47be4aa9f0fb116b8f081b8f7e246f1314",
          "linkedWithoutMetadata": "f16a81475fd38fc5e1d13911de695d47be4aa9f0fb116b8f081b8f7e246f1314"
        },
        "inherit": [
          "contracts/interfaces/IMulticall.sol:IMulticall"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "deployUSDY(string,string,(address,address,address))",
          "multiexcall(struct IMulticall.ExCallData[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDYFactory",
            "src": "contracts\\usdy\\USDYFactory.sol:75"
          },
          {
            "kind": "state-variable-immutable",
            "name": "guardian",
            "src": "contracts\\usdy\\USDYFactory.sol:73"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "usdyImplementation",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(USDY)14109",
              "contract": "USDYFactory",
              "src": "contracts\\usdy\\USDYFactory.sol:73"
            },
            {
              "label": "usdyProxyAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ProxyAdmin)8940",
              "contract": "USDYFactory",
              "src": "contracts\\usdy\\USDYFactory.sol:74"
            },
            {
              "label": "usdyProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(TokenProxy)1202",
              "contract": "USDYFactory",
              "src": "contracts\\usdy\\USDYFactory.sol:75"
            }
          ],
          "types": {
            "t_contract(ProxyAdmin)8940": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_contract(TokenProxy)1202": {
              "label": "contract TokenProxy",
              "numberOfBytes": "20"
            },
            "t_contract(USDY)14109": {
              "label": "contract USDY",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/USDYManager.sol:USDYManager": {
        "src": "contracts\\usdy\\USDYManager.sol:48",
        "version": {
          "withMetadata": "bfdd2ce7dbca64a9ceda593d9aea44e548d851f9c0681dd5f21b1a4a1cc4e6f8",
          "withoutMetadata": "bfdd2ce7dbca64a9ceda593d9aea44e548d851f9c0681dd5f21b1a4a1cc4e6f8",
          "linkedWithoutMetadata": "bfdd2ce7dbca64a9ceda593d9aea44e548d851f9c0681dd5f21b1a4a1cc4e6f8"
        },
        "inherit": [
          "contracts/interfaces/IUSDYManager.sol:IUSDYManager",
          "contracts/RWAHubOffChainRedemptions.sol:RWAHubOffChainRedemptions",
          "contracts/interfaces/IRWAHubOffChainRedemptions.sol:IRWAHubOffChainRedemptions",
          "contracts/RWAHub.sol:RWAHub",
          "contracts/external/openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "contracts/external/openzeppelin/contracts/utils/ERC165.sol:ERC165",
          "contracts/external/openzeppelin/contracts/utils/IERC165.sol:IERC165",
          "contracts/external/openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "contracts/external/openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/external/openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/interfaces/IRWAHub.sol:IRWAHub"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,uint256,uint256,address,address)",
          "setClaimableTimestamp(uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDYManager",
            "src": "contracts\\usdy\\USDYManager.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\external\\openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)",
              "contract": "AccessControl",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)",
              "contract": "AccessControlEnumerable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\AccessControlEnumerable.sol:19"
            },
            {
              "label": "pricer",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPricerReader)12291",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:48"
            },
            {
              "label": "assetSender",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:55"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:58"
            },
            {
              "label": "depositIdToDepositor",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_struct(Depositor)12310_storage)",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:59"
            },
            {
              "label": "redemptionIdToRedeemer",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Redeemer)12317_storage)",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:64"
            },
            {
              "label": "minimumDepositAmount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:69"
            },
            {
              "label": "minimumRedemptionAmount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:72"
            },
            {
              "label": "mintFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:74"
            },
            {
              "label": "redemptionFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:77"
            },
            {
              "label": "subscriptionRequestCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:85"
            },
            {
              "label": "redemptionRequestCounter",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:88"
            },
            {
              "label": "redemptionPaused",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:96"
            },
            {
              "label": "subscriptionPaused",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "RWAHub",
              "src": "contracts\\RWAHub.sol:97"
            },
            {
              "label": "offChainRedemptionPaused",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "RWAHubOffChainRedemptions",
              "src": "contracts\\RWAHubOffChainRedemptions.sol:53"
            },
            {
              "label": "minimumOffChainRedemptionAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RWAHubOffChainRedemptions",
              "src": "contracts\\RWAHubOffChainRedemptions.sol:55"
            },
            {
              "label": "depositIdToClaimableTimestamp",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "USDYManager",
              "src": "contracts\\usdy\\USDYManager.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IPricerReader)12291": {
              "label": "contract IPricerReader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)10888_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Depositor)12310_storage)": {
              "label": "mapping(bytes32 => struct IRWAHub.Depositor)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Redeemer)12317_storage)": {
              "label": "mapping(bytes32 => struct IRWAHub.Redeemer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)7671_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10888_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)10587_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Depositor)12310_storage": {
              "label": "struct IRWAHub.Depositor",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountDepositedMinusFees",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "priceId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Redeemer)12317_storage": {
              "label": "struct IRWAHub.Redeemer",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountRwaTokenBurned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "priceId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(RoleData)7671_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)10587_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/allowlist/AllowlistClient.sol:AllowlistClient": {
        "src": "contracts\\usdy\\allowlist\\AllowlistClient.sol:50",
        "inherit": [
          "contracts/interfaces/IAllowlistClient.sol:IAllowlistClient"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowlistClient",
            "src": "contracts\\usdy\\allowlist\\AllowlistClient.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allowlist",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IAllowlist)12099",
              "contract": "AllowlistClient",
              "src": "contracts\\usdy\\allowlist\\AllowlistClient.sol:51"
            }
          ],
          "types": {
            "t_contract(IAllowlist)12099": {
              "label": "contract IAllowlist",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/allowlist/AllowlistClientUpgradeable.sol:AllowlistClientUpgradeable": {
        "src": "contracts\\usdy\\allowlist\\AllowlistClientUpgradeable.sol:50",
        "inherit": [
          "contracts/interfaces/IAllowlistClient.sol:IAllowlistClient",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "allowlist",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IAllowlist)12099",
              "contract": "AllowlistClientUpgradeable",
              "src": "contracts\\usdy\\allowlist\\AllowlistClientUpgradeable.sol:53"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AllowlistClientUpgradeable",
              "src": "contracts\\usdy\\allowlist\\AllowlistClientUpgradeable.sol:89"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IAllowlist)12099": {
              "label": "contract IAllowlist",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/allowlist/AllowlistFactory.sol:AllowlistFactory": {
        "src": "contracts\\usdy\\allowlist\\AllowlistFactory.sol:56",
        "version": {
          "withMetadata": "0786fc2250f9854777d41dbccf3af8245645d6b167acfa4bd56dba7015692446",
          "withoutMetadata": "1b5115658a6e55e2557e42129bf94fc605b3a2e9d4437e6dda2452396b6f87a2",
          "linkedWithoutMetadata": "1b5115658a6e55e2557e42129bf94fc605b3a2e9d4437e6dda2452396b6f87a2"
        },
        "inherit": [
          "contracts/interfaces/IMulticall.sol:IMulticall"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "deployAllowlist(address,address)",
          "multiexcall(struct IMulticall.ExCallData[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowlistFactory",
            "src": "contracts\\usdy\\allowlist\\AllowlistFactory.sol:64"
          },
          {
            "kind": "state-variable-immutable",
            "name": "guardian",
            "src": "contracts\\usdy\\allowlist\\AllowlistFactory.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allowlistImplementation",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(AllowlistUpgradeable)15437",
              "contract": "AllowlistFactory",
              "src": "contracts\\usdy\\allowlist\\AllowlistFactory.sol:58"
            },
            {
              "label": "allowlistProxyAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ProxyAdmin)8940",
              "contract": "AllowlistFactory",
              "src": "contracts\\usdy\\allowlist\\AllowlistFactory.sol:61"
            },
            {
              "label": "allowlistProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(AllowlistProxy)14996",
              "contract": "AllowlistFactory",
              "src": "contracts\\usdy\\allowlist\\AllowlistFactory.sol:63"
            }
          ],
          "types": {
            "t_contract(AllowlistProxy)14996": {
              "label": "contract AllowlistProxy",
              "numberOfBytes": "20"
            },
            "t_contract(AllowlistUpgradeable)15437": {
              "label": "contract AllowlistUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)8940": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/allowlist/AllowlistProxy.sol:AllowlistProxy": {
        "src": "contracts\\usdy\\allowlist\\AllowlistProxy.sol:27",
        "version": {
          "withMetadata": "58917f926aa3209918e8949c374f1415917401941aed9b8c2d6b2ad0e16b304d",
          "withoutMetadata": "58917f926aa3209918e8949c374f1415917401941aed9b8c2d6b2ad0e16b304d",
          "linkedWithoutMetadata": "58917f926aa3209918e8949c374f1415917401941aed9b8c2d6b2ad0e16b304d"
        },
        "inherit": [
          "contracts/external/openzeppelin/contracts/proxy/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
          "contracts/external/openzeppelin/contracts/proxy/ERC1967Proxy.sol:ERC1967Proxy",
          "contracts/external/openzeppelin/contracts/proxy/ERC1967Upgrade.sol:ERC1967Upgrade",
          "contracts/external/openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowlistProxy",
            "src": "contracts\\usdy\\allowlist\\AllowlistProxy.sol:27"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/allowlist/AllowlistUpgradeable.sol:AllowlistUpgradeable": {
        "src": "contracts\\usdy\\allowlist\\AllowlistUpgradeable.sol:46",
        "version": {
          "withMetadata": "f304cd658453c4ef366feefb2c58eab095e10b60181a8f272a3b64e996fb038e",
          "withoutMetadata": "ecb4782349a3089c97535ceee9d220c34f72d88a5c62a81fd272f2814ae4a564",
          "linkedWithoutMetadata": "ecb4782349a3089c97535ceee9d220c34f72d88a5c62a81fd272f2814ae4a564"
        },
        "inherit": [
          "contracts/interfaces/IAllowlist.sol:IAllowlist",
          "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ERC165Upgradeable.sol:ERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol:IAccessControlEnumerableUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/external/openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "contracts/external/openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "()",
          "initialize(address,address)",
          "getValidTermIndexes()",
          "getCurrentTerm()",
          "addTerm(string)",
          "setCurrentTermIndex(uint256)",
          "setValidTermIndexes(uint256[])",
          "isAllowed(address)",
          "addSelfToAllowlist(uint256)",
          "setAccountStatus(address,uint256,bool)",
          "addAccountToAllowlist(uint256,address,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "currentTermIndex",
            "src": "contracts\\usdy\\allowlist\\AllowlistUpgradeable.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\utils\\ERC165Upgradeable.sol:46"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:65"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:296"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)7126_storage)",
              "contract": "AccessControlEnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlEnumerableUpgradeable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:106"
            },
            {
              "label": "verifications",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "AllowlistUpgradeable",
              "src": "contracts\\usdy\\allowlist\\AllowlistUpgradeable.sol:59"
            },
            {
              "label": "terms",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "AllowlistUpgradeable",
              "src": "contracts\\usdy\\allowlist\\AllowlistUpgradeable.sol:63"
            },
            {
              "label": "currentTermIndex",
              "offset": 0,
              "slot": "203",
              "type": "t_uint256",
              "contract": "AllowlistUpgradeable",
              "src": "contracts\\usdy\\allowlist\\AllowlistUpgradeable.sol:65"
            },
            {
              "label": "validIndexes",
              "offset": 0,
              "slot": "204",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "AllowlistUpgradeable",
              "src": "contracts\\usdy\\allowlist\\AllowlistUpgradeable.sol:69"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)7126_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2922_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)7126_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6825_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)2922_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6825_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/blocklist/Blocklist.sol:Blocklist": {
        "src": "contracts\\usdy\\blocklist\\Blocklist.sol:45",
        "version": {
          "withMetadata": "95631f3dea3992f8a499840c07169d44c854a265e5adbe0e18d9635bfeab8da1",
          "withoutMetadata": "9dc1b2014dd610df2288c8627f7f4919f10c8e847bf3ddf801fd9d96b922994c",
          "linkedWithoutMetadata": "9dc1b2014dd610df2288c8627f7f4919f10c8e847bf3ddf801fd9d96b922994c"
        },
        "inherit": [
          "contracts/interfaces/IBlocklist.sol:IBlocklist",
          "contracts/external/openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
          "contracts/external/openzeppelin/contracts/access/Ownable.sol:Ownable",
          "contracts/external/openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "addToBlocklist(address[])",
          "removeFromBlocklist(address[])",
          "isBlocked(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "contracts\\external\\openzeppelin\\contracts\\access\\Ownable2Step.sol:20"
            },
            {
              "label": "blockedAddresses",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Blocklist",
              "src": "contracts\\usdy\\blocklist\\Blocklist.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/blocklist/BlocklistClient.sol:BlocklistClient": {
        "src": "contracts\\usdy\\blocklist\\BlocklistClient.sol:49",
        "inherit": [
          "contracts/interfaces/IBlocklistClient.sol:IBlocklistClient"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BlocklistClient",
            "src": "contracts\\usdy\\blocklist\\BlocklistClient.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "blocklist",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBlocklist)12161",
              "contract": "BlocklistClient",
              "src": "contracts\\usdy\\blocklist\\BlocklistClient.sol:50"
            }
          ],
          "types": {
            "t_contract(IBlocklist)12161": {
              "label": "contract IBlocklist",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      },
      "contracts/usdy/blocklist/BlocklistClientUpgradeable.sol:BlocklistClientUpgradeable": {
        "src": "contracts\\usdy\\blocklist\\BlocklistClientUpgradeable.sol:50",
        "inherit": [
          "contracts/interfaces/IBlocklistClient.sol:IBlocklistClient",
          "contracts/external/openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\external\\openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:67"
            },
            {
              "label": "blocklist",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IBlocklist)12161",
              "contract": "BlocklistClientUpgradeable",
              "src": "contracts\\usdy\\blocklist\\BlocklistClientUpgradeable.sol:53"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BlocklistClientUpgradeable",
              "src": "contracts\\usdy\\blocklist\\BlocklistClientUpgradeable.sol:89"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBlocklist)12161": {
              "label": "contract IBlocklist",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.16"
      }
    }
  ]
}