/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IUSDYManager, IUSDYManagerInterface } from "../IUSDYManager";

const _abi = [
  {
    inputs: [],
    name: "ClaimableTimestampInPast",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimableTimestampNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "MintNotYetClaimable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "claimTimestamp",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "depositId",
        type: "bytes32",
      },
    ],
    name: "ClaimableTimestampSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimDate",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "depositIds",
        type: "bytes32[]",
      },
    ],
    name: "setClaimableTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IUSDYManager__factory {
  static readonly abi = _abi;
  static createInterface(): IUSDYManagerInterface {
    return new utils.Interface(_abi) as IUSDYManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUSDYManager {
    return new Contract(address, _abi, signerOrProvider) as IUSDYManager;
  }
}
