/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IRWAOracleExternalComparisonCheck,
  IRWAOracleExternalComparisonCheckInterface,
} from "../IRWAOracleExternalComparisonCheck";

const _abi = [
  {
    inputs: [],
    name: "AbsoluteDifferenceConstraintViolated",
    type: "error",
  },
  {
    inputs: [],
    name: "ChainlinkOraclePriceStale",
    type: "error",
  },
  {
    inputs: [],
    name: "ChainlinkRoundNotUpdated",
    type: "error",
  },
  {
    inputs: [],
    name: "CorruptedChainlinkResponse",
    type: "error",
  },
  {
    inputs: [],
    name: "DeltaDifferenceConstraintViolation",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRWAPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceUpdateWindowViolation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "oldChainlinkPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint80",
        name: "oldRoundId",
        type: "uint80",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "newChainlinkPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint80",
        name: "newRoundId",
        type: "uint80",
      },
    ],
    name: "ChainlinkPriceIgnored",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "oldChainlinkPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint80",
        name: "oldRoundId",
        type: "uint80",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "newChainlinkPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint80",
        name: "newRoundId",
        type: "uint80",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "oldRWAPrice",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "newRWAPrice",
        type: "int256",
      },
    ],
    name: "RWAExternalComparisonCheckPriceSet",
    type: "event",
  },
  {
    inputs: [],
    name: "getPriceData",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "newPrice",
        type: "int256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IRWAOracleExternalComparisonCheck__factory {
  static readonly abi = _abi;
  static createInterface(): IRWAOracleExternalComparisonCheckInterface {
    return new utils.Interface(
      _abi
    ) as IRWAOracleExternalComparisonCheckInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRWAOracleExternalComparisonCheck {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IRWAOracleExternalComparisonCheck;
  }
}
