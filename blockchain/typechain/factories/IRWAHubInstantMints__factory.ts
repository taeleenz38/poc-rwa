/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IRWAHubInstantMints,
  IRWAHubInstantMintsInterface,
} from "../IRWAHubInstantMints";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldInstantMintAssetManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newInstantMintAssetManager",
        type: "address",
      },
    ],
    name: "InstantMintAssetManagerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmountDeposited",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmountAfterFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feesInCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rwaOwed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "InstantMintCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "InstantMintFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "InstantMintPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "InstantMintUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rwaAmountBurned",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmountAfterFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feesInCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "InstantRedemptionCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "InstantRedemptionFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "InstantRedemptionPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "InstantRedemptionUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "priceId",
        type: "uint256",
      },
    ],
    name: "PriceIdSetForInstantMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "priceId",
        type: "uint256",
      },
    ],
    name: "PriceIdSetForInstantRedemption",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "instantMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "instantRedemption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseInstantMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseInstantRedemption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_instantMintFee",
        type: "uint256",
      },
    ],
    name: "setInstantMintFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMintLimit",
        type: "uint256",
      },
    ],
    name: "setInstantMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMintLimitDuration",
        type: "uint256",
      },
    ],
    name: "setInstantMintLimitDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_instantMintPriceId",
        type: "uint256",
      },
    ],
    name: "setInstantMintPriceId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_instantRedemptionFee",
        type: "uint256",
      },
    ],
    name: "setInstantRedemptionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRedemptionLimit",
        type: "uint256",
      },
    ],
    name: "setInstantRedemptionLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRedemptionLimitDuration",
        type: "uint256",
      },
    ],
    name: "setInstantRedemptionLimitDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_instantRedemptionPriceId",
        type: "uint256",
      },
    ],
    name: "setInstantRedemptionPriceId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpauseInstantMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpauseInstantRedemption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IRWAHubInstantMints__factory {
  static readonly abi = _abi;
  static createInterface(): IRWAHubInstantMintsInterface {
    return new utils.Interface(_abi) as IRWAHubInstantMintsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRWAHubInstantMints {
    return new Contract(address, _abi, signerOrProvider) as IRWAHubInstantMints;
  }
}
