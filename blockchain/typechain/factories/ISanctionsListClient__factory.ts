/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ISanctionsListClient,
  ISanctionsListClientInterface,
} from "../ISanctionsListClient";

const _abi = [
  {
    inputs: [],
    name: "SanctionedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "SanctionsListZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldSanctionsList",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newSanctionsList",
        type: "address",
      },
    ],
    name: "SanctionsListSet",
    type: "event",
  },
  {
    inputs: [],
    name: "sanctionsList",
    outputs: [
      {
        internalType: "contract ISanctionsList",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sanctionsList",
        type: "address",
      },
    ],
    name: "setSanctionsList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISanctionsListClient__factory {
  static readonly abi = _abi;
  static createInterface(): ISanctionsListClientInterface {
    return new utils.Interface(_abi) as ISanctionsListClientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISanctionsListClient {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ISanctionsListClient;
  }
}
