/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  BlocklistClient,
  BlocklistClientInterface,
} from "../BlocklistClient";

const _abi = [
  {
    inputs: [],
    name: "BlockedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "BlocklistZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldBlocklist",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newBlocklist",
        type: "address",
      },
    ],
    name: "BlocklistSet",
    type: "event",
  },
  {
    inputs: [],
    name: "blocklist",
    outputs: [
      {
        internalType: "contract IBlocklist",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "setBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class BlocklistClient__factory {
  static readonly abi = _abi;
  static createInterface(): BlocklistClientInterface {
    return new utils.Interface(_abi) as BlocklistClientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlocklistClient {
    return new Contract(address, _abi, signerOrProvider) as BlocklistClient;
  }
}
